---
title: "dermatomyositis"
author: "YinCY"
format: html
editor: source
date: 2024-02-19
---
# DM v.s. healthy
## data
- GSE46239 (52 samples): Gene expression profiling of healthy donor and dermatomyositis patient skin biopsy specimens.
- GSE39582 (585 samples): The aim of this study was to build up a robust molecular classification of mRNA expression profiles (Affymetrix U133Plus2) of a large series of 443 CC and 19 non-tumoral colorectal mucosas, and to validate it on an independent series of 123 CC and 906 public dataset.
- GSE1551 (23 samples): muscle biopsies of normal and dermatomyositis patients

```{r}
#|  message: false
#|  warning: false

library(fs)
library(oligo)
library(Biobase)
library(limma)
library(GEOquery)
library(magrittr)
library(stringr.plus)
library(ggplot2)
library(AnnotationDbi)
library(stringr)
library(vsn)
library(Rtsne)
library(ggrepel)
library(RColorBrewer)
```

# DM
```{r}
es <- getGEO(GEO = "GSE1551")[[1]]
pData(es)$group <- ifelse(grepl("DM", pData(es)$description), "DM", "Normal") %>% factor(levels = c("Normal", "DM"))
pData(es)$group %>% table
```

```{r}
es <- justvsn(es)
rms <- es %>% exprs %>% apply(1, median)
rms %>% hist(breaks = 200)
abline(v = 7.5, lty = 2, col = "red", lwd = 2)
threshold <- 7.5
cutoff <- pData(es)$group %>% table %>% min
ids <- es %>% exprs %>% apply(1, function(x){
    sum(x >= threshold) >= cutoff
})
ids %>% table
es <- subset(es, ids)

# remove multiple mapping and non-mapping probes
ids <- str_detect(fData(es)$`Gene Symbol`, pattern = "///") | (nchar(fData(es)$`Gene Symbol`) <= 0)
ids %>% table
fData(es)$`Gene Symbol`[ids]

es <- es[!ids, ]
```

```{r}
design <- model.matrix(~ 0 + pData(es)$group)
colnames(design) <- c("Normal", "DM")

fit <- lmFit(object = es, design = design)
contrast <- makeContrasts(DM-Normal, levels = design)
fit <- contrasts.fit(fit = fit, contrasts = contrast) %>% eBayes()
tables_DM <- topTable(fit, number = Inf)

saveRDS(tables_DM, "../../../data/zhuyi/dermatomyositis/differential_expressed_genes_DM.rds")
saveRDS(es, "../../../data/zhuyi/dermatomyositis/DM_es.rds")
```

```{r}
degs <- tables_DM %>% dplyr::filter(P.Value < 0.05, abs(logFC) >= 1) %>% rownames()

df <- data.frame(group = pData(es)$group, 
                 row.names = rownames(pData(es)))
df_cols <- list(group = c(DM = "tomato", Normal = "steelblue"))

pdf("../../../data/zhuyi/dermatomyositis/res/DM_differential_expressed_genes.pdf")
pheatmap::pheatmap(exprs(es)[degs, ], 
                   cluster_cols = F, 
                   cluster_rows = T, 
                   show_rownames = F, 
                   show_colnames = F, 
                   annotation_col = df, 
                   annotation_colors = df_cols, 
                   color = viridis::viridis(255, option = "B"), 
                   legend_breaks = c(8, 15), 
                   legend_labels = c("low", "high"))
dev.off()
```


```{r}
degs <- tables_DM %>% dplyr::filter(P.Value < 0.05) %>% rownames()
dists <- es %>% exprs %>% .[degs, ] %>% t %>% dist %>% as.matrix()
es %>% phenoData() %>% pData
df <- data.frame(group = pData(es)$group, 
                 row.names = pData(es) %>% row.names)
df_cols <- list(group = c("DM" = "tomato", "Normal" = "blue"))

pdf("../../../data/zhuyi/dermatomyositis/res/DM_sample_heatmap.pdf", width = 9)
pheatmap::pheatmap(dists, 
                   annotation_col = df, 
                   clustering_method = "ward.D2",
                   color = viridis::inferno(100), 
                   legend_breaks = c(10, 75),
                   legend_labels = c("low", "high"),
                   legend = TRUE, 
                   show_rownames = F, 
                   show_colnames = F)
dev.off()
```

```{r}
es <- readRDS("../../../data/zhuyi/dermatomyositis/DM_es.rds")
tables_DM <- readRDS("../../../data/zhuyi/dermatomyositis/differential_expressed_genes_DM.rds")
set.seed(101)
pcas <- es %>% exprs %>% .[degs, ] %>%  t %>% prcomp()
var_percent <- pcas$sdev ^ 2 /(sum(pcas$sdev ^ 2)) * 100 %>% round(digits = 3)

df <- data.frame(pc1 = pcas$x[, 1], 
                 pc2 = pcas$x[, 2], 
                 group = pData(es)$group)

df %>% ggplot(aes(pc1, pc2)) +
    geom_hex(aes(fill = group), color = "grey20") +
    scale_color_discrete(name = "group") +
    scale_shape_discrete(name = "group") +
    scale_x_continuous(name = paste("PC1: ", round(var_percent[1], 2), "%")) +
    scale_y_continuous(name = paste("PC2: ", round(var_percent[2], 2), "%")) +
    theme_classic()

ggsave("../../../data/zhuyi/dermatomyositis/res/DM_sample_PCA.tiff", 
       width = 9, bg = "white")
```

```{r}
set.seed(101)
res_tsns <- Rtsne(pcas$x, perplexity = 7, normalize = F)
df <- data.frame(res_tsns$Y, 
                 group = pData(es)$group, 
                 row.names = rownames(pcas$x))

df %>% 
    ggplot(aes(X1, X2)) +
    geom_hex(aes(fill = group), color = "grey30") +
    scale_x_continuous(name = "TSNE1") +
    scale_y_continuous(name = "TSNE2") +
    theme_classic()

ggsave("../../../data/zhuyi/dermatomyositis/res/DM_sample_TSNE.tiff", 
       width = 9, bg = "white")
```


```{r}
tables_DM <- tables_DM %>% dplyr::mutate(log10pval = -log10(P.Value), 
                                         size = ifelse(abs(logFC) >= 1 & P.Value < 0.05, "large", "small") %>% factor, 
                                         color = ifelse(logFC >= 1 & P.Value < 0.05, "up", 
                                                        ifelse(logFC <= -1 & P.Value < 0.05, "down", "nc")), 
                                         color = factor(color, levels = c("up", "down", "nc")))
df <- rbind(
    tables_DM %>% dplyr::filter(logFC >= 1, P.Value < 0.05) %>% head(10), 
    tables_DM %>% dplyr::filter(logFC <= -1, P.Value < 0.05) %>% head(10)
)


tables_DM %>% 
    ggplot(aes(logFC, log10pval)) +
    geom_point(aes(color = color, size = size)) +
    geom_label_repel(data = df, aes(logFC, log10pval, label = Gene.Symbol), size= 2, nudge_y = 0.25) +
    geom_vline(xintercept = c(-1, 1) * 0.95, linetype = 2, linewidth = 0.5, color = "grey30") +
    geom_hline(yintercept = -log10(0.05) * 0.95, linetype = 2, linewidth = 0.5, color = "grey30") +
    scale_color_manual(name = NULL, values = c("up" = "tomato", "down" = "steelblue", "nc" = "grey")) +
    scale_size_manual(values = c("large" = 3, "small" = 0.5)) +
    theme_classic() +
    scale_x_continuous(name = "log2FC", limits = c(-4, 5)) +
    scale_y_continuous(name = "-log10 P Value") +
    guides(color = guide_legend(override.aes = list(size = 4)))

ggsave("../../../data/zhuyi/dermatomyositis/res/DM_volcano_plots.tiff", 
       width = 9, height = 7)
```

# CRC
```{r}
es <- getGEO(GEO = "GSE39582")[[1]]
pData(es)$group <- ifelse(grepl("Adenocarcinoma", pData(es)$source_name_ch1), "CRC", "Normal") %>% factor(levels = c("Normal", "CRC"))
es %>% pData %>% .$group %>% table
design <- model.matrix(~ 0 + pData(es)$group)
colnames(design) <- c("Normal", "CRC")
design %>% head
```

```{r}
es <- justvsn(es)
rms <- es %>% exprs() %>% apply(1, median)
hist(rms, breaks = 200)
cutoff <- 1.75
threshold <- es %>% pData() %>% .$group %>% table %>% min

ids <- es %>% exprs %>% apply(1, function(x){
    sum(x > cutoff) >= threshold
})
ids %>% table
es <- subset(es, ids)

# remove multiple mapping and non-mapping probes
ids <- str_detect(fData(es)$`Gene Symbol`, pattern = "///") | (nchar(fData(es)$`Gene Symbol`) <= 0)
fData(es)$`Gene Symbol`[ids] %>% str
ids %>% table
es <- es[!ids, ]

fit <- lmFit(object = es, design = design)
contrast <- makeContrasts(CRC-Normal, levels = design)
fit <- contrasts.fit(fit = fit, contrasts = contrast) %>% eBayes()
tables_CRC <- topTable(fit = fit, number = Inf)

saveRDS(es, "../../../data/zhuyi/dermatomyositis/CRC_es.rds")
saveRDS(tables_CRC, "../../../data/zhuyi/dermatomyositis/differential_expressed_genes_CRC.rds")
```

```{r}
degs <- tables_CRC %>% dplyr::filter(abs(logFC) >= 1, P.Value <= 0.05) %>% rownames() %>% unique

df <- data.frame(group = pData(es)$group, 
                 row.names = rownames(pData(es)))
df_cols <- list(group = c(CRC = "tomato", Normal = "steelblue"))

pdf("../../../data/zhuyi/dermatomyositis/res/CRC_differential_expressed_genes.pdf")
pheatmap::pheatmap(exprs(es)[degs, ], 
                   cluster_rows = T, 
                   cluster_cols = F, 
                   annotation_col = df, 
                   annotation_colors = df_cols, 
                   show_rownames = F, 
                   show_colnames = F, 
                   color = viridis::viridis(255, option = "B"), 
                   legend_breaks = c(1, 3.3), 
                   legend_labels = c("low", "high"))
dev.off()
```

```{r}
df <- data.frame(group = pData(es)$group, 
                 row.names = rownames(pData(es)))
dists <- dist(es %>% exprs %>% .[degs, ] %>% t %>% dist) %>% as.matrix()

pdf("../../../data/zhuyi/dermatomyositis/res/CRC_sample_heatmap.pdf", width = 9)
pheatmap::pheatmap(dists, 
                   cluster_rows = T, 
                   annotation_col = df, 
                   show_rownames = F, 
                   show_colnames = F, 
                   clustering_method = "ward.D2", 
                   legend_breaks = c(20, 130),
                   legend_labels = c("low", "high"),
                   color = viridis::viridis(255, alpha = 1, option = "B"))
dev.off()
```

```{r}
set.seed(101)
pcas <- es %>% exprs %>% .[degs, ] %>% t() %>% prcomp()
vars <- pcas$sdev^2/sum(pcas$sdev^2) * 100 

df <- data.frame(pc1 = pcas$x[, 1], 
                 pc2 = pcas$x[, 2], 
                 group = pData(es)$group)

df %>% 
    ggplot(aes(pc1, pc2)) +
    geom_hex(aes(fill = group), color = "grey20", position = "jitter") +
    scale_x_continuous(name = paste("PC1: ", round(vars[1], 1), "%", sep = "")) +
    scale_y_continuous(name = paste("PC2: ", round(vars[2], 1), "%", sep = "")) +
    theme_classic()

ggsave("../../../data/zhuyi/dermatomyositis/res/CRC_sample_PCA.tiff", 
       width = 9, height = 7)
```

```{r}
set.seed(101)
res_tsne <- Rtsne::Rtsne(X = pcas$x, 
                         perplexity = 100, 
                         normalize=F)
df <- data.frame(res_tsne$Y, 
                 group = pData(es)$group,
                 row.names = rownames(pcas$x))
df %>% 
    ggplot(aes(X1, X2)) + 
    geom_hex(aes(fill = group), color = "grey20", position = "jitter") +
    scale_x_continuous(name = "TSNE1") +
    scale_y_continuous(name = "TSNE2") +
    theme_classic()

ggsave("../../../data/zhuyi/dermatomyositis/res/CRC_sample_TSNE.tiff", 
       width = 9, height = 7)
```

```{r}
tables_CRC <- tables_CRC %>% 
    dplyr::mutate(log10pval = -log10(p_value), 
                  size = ifelse(abs(log_fc) >= 1 & p_value < 0.05, "large", "small"), 
                  color = ifelse(log_fc >= 1 & p_value < 0.05, "up", 
                                 ifelse(log_fc <= -1 & p_value < 0.05, "down", "nc")), 
                  color = factor(color, levels = c("up", "down", "nc")))

df <- rbind(
    tables_CRC %>% dplyr::filter(nchar(gene_symbol) > 0, log_fc >= 1, p_value < 0.05) %>% head(10), 
    tables_CRC %>% dplyr::filter(nchar(gene_symbol) > 0, log_fc <= -1, p_value < 0.05) %>% head(10)
)

tables_CRC %>% 
    ggplot(aes(log_fc, log10pval)) +
    geom_point(aes(color = color, size = size)) +
    geom_label_repel(data = df, aes(log_fc, log10pval, label = gene_symbol), nudge_y = 3, size = 2) +
    scale_x_continuous(name = "log2FC", limits = c(-2.5, 2.5)) +
    scale_y_continuous(name = "-log10 P Value", limits = c(0, 130)) +
    geom_vline(xintercept = c(-1, 1), linetype = 2, linewidth = 0.5, color = "grey30") +
    geom_hline(yintercept = -log10(0.05), linetype = 2, linewidth = 0.5, color = "grey30") +
    scale_size_manual(values = c("large" = 2.5, "small" = 1)) +
    scale_color_manual(name = NULL, values = c("up" = "tomato", "down" = "steelblue", "nc" = "grey")) +
    guides(color = guide_legend(override.aes = list(size = 3))) +
    theme_classic()

ggsave("../../../data/zhuyi/dermatomyositis/res/CRC_volcano_plots.tiff", 
       width = 9, height = 7)
```

# overlapping genes
```{r}
#| message: false
#| warning: false

library(ggvenn)
library(magrittr)
library(tidyverse)
library(stringr.plus)
```

```{r}
tables_DM <- readRDS("../../../data/zhuyi/dermatomyositis/differential_expressed_genes_DM.rds") %>% janitor::clean_names()
tables_CRC <- readRDS("../../../data/zhuyi/dermatomyositis/differential_expressed_genes_CRC.rds") %>% janitor::clean_names()
```

```{r}
p <- 0.01
l <- 0.6
DM_up <- tables_DM %>% filter(p_value < p, log_fc > l) %>% pull(gene_symbol) %>% unique
DM_up <- DM_up[nchar(DM_up) > 0]

DM_down <- tables_DM %>% filter(p_value < p, log_fc < -l) %>% pull(gene_symbol) %>% unique
DM_down <- DM_down[nchar(DM_down) > 0]

CRC_up <- tables_CRC %>% filter(p_value < p, log_fc > l) %>% pull(gene_symbol) %>% unique
CRC_up <- CRC_up[nchar(CRC_up) > 0]

CRC_down <- tables_CRC %>% filter(p_value < p, log_fc < -l) %>% pull(gene_symbol) %>% unique
CRC_down <- CRC_down[nchar(CRC_down) > 0]
```

```{r}
ggvenn(data = list(`DM up` = c(DM_up), `CRC up` = c(CRC_up)), 
       stroke_color = "grey", 
       stroke_size = 1, 
       stroke_linetype = 2,
       digits = 2, 
       show_elements = FALSE, 
       fill_color = c("tomato", "steelblue"), 
       auto_scale = F) 

ggsave("../../../data/zhuyi/dermatomyositis/res/venn_up.tiff", 
       width = 9, bg = "white")
```

```{r}
ggvenn(data = list(`DM down` = c(DM_down), `CRC down` = c(CRC_down)), 
       stroke_color = "grey", 
       stroke_size = 1, 
       stroke_linetype = 2,
       digits = 2, 
       show_elements = FALSE, 
       fill_color = c("tomato", "steelblue"), 
       auto_scale = F)

ggsave("../../../data/zhuyi/dermatomyositis/res/venn_down.tiff", 
       width = 9, bg = "white")
```

## glm
```{r}
#| message: false
#| warning: false

library(glmnet)
library(Biobase)
library(magrittr)
```

```{r}
es_DM <- readRDS("../../../data/zhuyi/dermatomyositis/DM_es.rds")
es_CRC <- readRDS("../../../data/zhuyi/dermatomyositis/CRC_es.rds")

tables_DM <- readRDS("../../../data/zhuyi/dermatomyositis/differential_expressed_genes_DM.rds")
tables_CRC <- readRDS("../../../data/zhuyi/dermatomyositis/differential_expressed_genes_CRC.rds")

degs_DM <- tables_DM %>% 
    dplyr::filter(P.Value < 0.05) %>%
    dplyr::pull(ID) %>% unique

degs_CRC <- tables_CRC %>% 
    dplyr::filter(P.Value < 0.05) %>%
    dplyr::pull(ID) %>% unique

degs_DM %>% str
degs_CRC %>% str
common_degs <- intersect(tables_DM$Gene.Symbol[tables_DM$ID %in% degs_DM], 
                         tables_CRC$Gene.Symbol[tables_CRC$ID %in% degs_CRC])

common_degs_id_DM <- tables_DM %>% dplyr::filter(Gene.Symbol %in% common_degs) %>% dplyr::pull(ID) %>% unique
```

```{r}
set.seed(101)
meta_DM <- phenoData(es_DM) %>% pData
mtx_DM <- es_DM %>% exprs() %>% .[common_degs_id_DM, ]
all(colnames(mtx_DM) == rownames(meta_DM))

model_lasso <- glmnet(x = t(mtx_DM), y = as.numeric(meta_DM$group), 
                      nlambda = 100, alpha = 1, standardize = FALSE)
cv_model_lasso <- cv.glmnet(t(mtx_DM), as.numeric(meta_DM$group), nlambda = 150, alpha = 1)

pdf("../../../data/zhuyi/dermatomyositis/res/lasso_regression.pdf", width = 10)
plot(log(cv_model_lasso$lambda), cv_model_lasso$cvm, 
     pch = 19, ylim = c(0, 0.3), col = "tomato", cex = 0.7,
     xlab = expression(Log(lambda)), 
     ylab = "Mean-Squared Error")
arrows(log(cv_model_lasso$lambda), 
         cv_model_lasso$cvup, 
         log(cv_model_lasso$lambda), 
         cv_model_lasso$cvlo, 
       angle = 90, 
       length = 0.05, 
       code = 3, 
       col = "grey")
abline(v = log(c(cv_model_lasso$lambda.min, cv_model_lasso$lambda.1se)), lty = 2, lwd = 0.5, col = "black")
dev.off()

cv_model_lasso_lambda_min <- glmnet(x = t(mtx_DM), y = as.numeric(meta_DM$group), alpha = 1, lambda = cv_model_lasso$lambda.min)

selected_gene_id_DM <- rownames(cv_model_lasso_lambda_min$beta)[as.numeric(cv_model_lasso_lambda_min$beta) != 0]

selected_gene_symbol_DM <- tables_DM %>% dplyr::filter(ID %in% selected_gene_id_DM) %>% dplyr::pull(Gene.Symbol) %>% unique
selected_gene_symbol_DM
```

## SVM
```{r}
library(e1071)
source("../../../github/SVM-RFE/msvmRFE.R")

mtx_DM <- mtx_DM %>% t %>% as.data.frame()
group <- setNames(meta_DM$group, meta_DM$geo_accession)
mtx_DM$group <- group[rownames(mtx_DM)] %>% unname() %>% as.numeric()
mtx_DM <- mtx_DM %>% dplyr::relocate(group)
```

```{r}
set.seed(101)
model <- svmRFE(mtx_DM, k = 10, halve.above = 100)

nfold <- 10
nrows <- nrow(mtx_DM)
folds <- rep(1:nfold, len = nrows)[sample(nrows)]
folds <- lapply(1:nfold, function(x) which(folds == x))

results <- lapply(folds, svmRFE.wrap, mtx_DM, k = 10, halve.above = 100)
top_features <- WriteFeatures(results, mtx_DM, save = F)

plot(top_features$AvgRank[1:200], type = "h")
points(top_features$AvgRank[1:200], pch = 19)
abline(v = 75, lty = 2, lwd = 1)
```

```{r}
set.seed(101)
featsweep <- lapply(1:50, FeatSweep.wrap, results, mtx_DM)
featsweep %>% class
featsweep %>% length
no.info <- min(prop.table(table(mtx_DM[, 1])))
errors <- sapply(featsweep, function(x){ifelse(is.null(x), NA, x$error)})
saveRDS(featsweep, "../../../data/zhuyi/dermatomyositis/featsweep.rds")

pdf("../../../data/zhuyi/dermatomyositis/res/02_feature_gene_screen/svm_feature_selection.pdf", 
    width = 10)
plot(errors, 
     type = "b", 
     xlab = "Number of Features", 
     ylab = "10 Fold Cross Validation Error", 
     pch = 19)

df <- data.frame(x = which.min(errors),
                 y = min(errors))
points(df$x, df$y, col = "red", pch = 19)
text(x = which.min(errors), 
     y = min(errors) * 0.98, 
     label = paste("N = ", which.min(errors), sep = ""), 
     xpd = TRUE)
dev.off()
```

```{r}
svm_selected_features_SVMRFE <- top_features %>% head(which.min(errors)) %>% dplyr::pull(FeatureName)
selected_genes_symbol_SVMRFE <- tables_DM %>% dplyr::filter(ID %in% svm_selected_features_SVMRFE) %>% dplyr::pull(Gene.Symbol) 
selected_gene_symbol <- intersect(selected_genes_symbol_SVMRFE, selected_gene_symbol_DM)
selected_gene_symbol
```

```{r}
library(ggvenn)

ggvenn(data = list(LASSO = selected_gene_symbol_DM, SVM_RFE = selected_genes_symbol_SVMRFE), 
       fill_color = c("tomato", "steelblue"), 
       stroke_color = "grey", 
       stroke_linetype = 1, 
       digits = 2)

ggsave("../../../data/zhuyi/dermatomyositis/res/02_feature_gene_screen/feature_selected_LASSO_SVN_RFE.tiff", 
       bg = "white", width = 9)
```

```{r}
library(ggplot2)
library(ggpubr)
source("../../functions/makeESdf.R")
selected_gene_id <- fData(es_DM) %>% dplyr::filter(`Gene Symbol` %in% selected_gene_symbol) %>% dplyr::pull(ID) %>% unique

df <- makeESdf(es_DM, features = selected_gene_id, join_by = "ID")
df <- df %>% tidyr::pivot_longer(cols = starts_with("GSM"), names_to = "sample", values_to = "value")
ids <- setNames(pData(es_DM)$group %>% as.character, pData(es_DM)$geo_accession)
df$group <- ids[df$sample] %>% factor(levels = c("DM", "Normal"))

ggboxplot(data = df, 
          x = 'group', 
          y = "value", 
          facet.by = "Gene Symbol", 
          add = "jitter", 
          scales = "free_y", 
          strip.position = "right", 
          panel.labs.font = list(color = "gold"), 
          panel.labs.background = list(fill = "grey70", color = "grey70"), 
          nrow = 1) +
    stat_compare_means(comparisons = list(c("DM", "Normal"))) +
    scale_y_continuous(name = NULL, expand = c(0.1,0.1)) +
    scale_x_discrete(name = NULL)

ggsave("../../../data/zhuyi/dermatomyositis/res/03_feature_gene_expression/gene_expressions_DM.tiff", 
       height = 4, width = 16)
```

```{r}
library(ggpubr)

selected_gene_id <- fData(es_CRC) %>% dplyr::filter(`Gene Symbol` %in% selected_gene_symbol) %>% dplyr::pull(ID) %>% unique

df <- makeESdf(es = es_CRC, features = selected_gene_id, join_by = "ID")
df <- df %>% tidyr::pivot_longer(cols = starts_with("GSM") , names_to = "sample", values_to = "value")
ids <- setNames(pData(es_CRC)$group, pData(es_CRC)$geo_accession)
df$group <- ids[df$sample] %>% factor(levels = c("CRC", "Normal"))

ggboxplot(data = df, 
          x = 'group', 
          y = "value", 
          facet.by = "Gene Symbol", 
          add = "jitter", 
          scales = "free_y", 
          strip.position = "right", 
          panel.labs.font = list(color = "gold"), 
          panel.labs.background = list(fill = "grey70", color = "grey70"), 
          nrow = 1) +
    stat_compare_means(comparisons = list(c("CRC", "Normal"))) +
    scale_y_continuous(name = NULL, expand = c(0.1,0.1)) +
    scale_x_discrete(name = NULL)

ggsave("../../../data/zhuyi/dermatomyositis/res/03_feature_gene_expression/gene_expressions_CRC.tiff", 
       height = 4, width = 16)
```

## ROC
```{r}
library(pROC)
selected_gene_id <- fData(es_CRC) %>% dplyr::filter(`Gene Symbol` %in% selected_gene_symbol) %>% dplyr::pull(ID) %>% unique
ids <- setNames(fData(es_CRC)$`Gene Symbol`, fData(es_CRC)$ID)[selected_gene_id]
df <- es_CRC %>% exprs %>% .[selected_gene_id, ] %>% t %>% as.data.frame()
colnames(df) <- ids[colnames(df)] %>% unname

ids <- setNames(pData(es_CRC)$group, pData(es_CRC)$geo_accession)
df$group <- ids[rownames(df)] %>% unname
df <- df %>% dplyr::relocate(group)

genes <- colnames(df)[-1]

for(gene in genes){
    res_roc <- roc(df[, 'group', drop = TRUE] ~ df[, gene, drop = TRUE])
    
    pdf(paste("../../../data/zhuyi/dermatomyositis/res/04_diagnostic efficacy/", "ROC_", gene, ".pdf", sep = ""))
    
     plot(res_roc, 
          print.auc = TRUE, 
          legacy.axes = TRUE, 
          print.thres = TRUE, 
          col = "red", 
          print.thres.pch = 19, 
          print.thres.cex = 2, 
          grid = TRUE, 
          main = paste(gene))
    
    dev.off()
}
```

## TCGA CRC data
```{r}
library(FirebrowseR)
library(magrittr)
library(EnsDb.Hsapiens.v86)

cohorts <- c("ACC", 'BLCA', "BRCA", "CESC", 'CHOL',
            "COAD", "COADREAD", "DLBC", "ESCA", "FPPP",
            "GBM", "GBMLGG", "HNSC", "KICH", "KIPAN", 
            "KIRC", "KIRP", "LAML", "LGG", "LIHC", 
            "LUAD", "LUSC", "MESO", "OV", "PAAD", 
            "PCPG", "PRAD","READ", "SARC", "SKCM",
            "STAD", "STES", "TGCT", "THCA", "THYM", 
            "UCEC", "UCS", "UVM")

EnsDb.Hsapiens.v86 %>% columns()
genes <- data.frame(ensembl = keys(EnsDb.Hsapiens.v86), 
                    symbol = mapIds(EnsDb.Hsapiens.v86, keys = keys(EnsDb.Hsapiens.v86), keytype = "GENEID", column = "SYMBOL"), 
                    type = mapIds(EnsDb.Hsapiens.v86, keys = keys(EnsDb.Hsapiens.v86), keytype = "GENEID", column = "GENEBIOTYPE"))

genes$type %>% table
# genes <- genes %>% dplyr::filter(type == "protein_coding")
gene_list <- split(genes$symbol, f = cut(seq_along(genes$symbol), breaks = ceiling(length(genes$symbol)/100)))
```

```{r}
all_cohorts_list <- vector(mode = "list", length = length(cohorts))
names(all_cohorts_list) <- cohorts

for(cohort in cohorts){
    flag = TRUE
    page = 1
    page_size = 2000
    
    current <- vector(mode = "list")
    while(flag){
        for(i in seq_along(genes$symbol)){
            current[[page]][[i]] <- try(Samples.mRNASeq(format = "tsv", 
                                                        gene = genes$symbol, 
                                                        cohort = cohort, 
                                                        page_size = page_size, 
                                                        page = page))
            print(str(current[[page]][[i]]))
            
            if(class(current[[page]][[i]]) == "try-error"){
                print(paste0(cohort, " downloading failed..."))
                break
            }
            
            Sys.sleep(sample(5, 1))
        }
        current[[page]] <- do.call(rbind, current[[page]])
        
        if(nrow(current[[page]]) < page_size){
            flag = FALSE
        }else{
            print(paste("downloaded the ", i, " page of ", cohort, "..."))
            page = page + 1
        }
    }

    project <- do.call(rbind, current)
    all_cohorts_list[[cohort]] <- project
    
    Sys.sleep(sample(10, 1))
}
```

# TCGA
```{r}
library(TCGAbiolinks)

projects <- getGDCprojects()
projects[projects$project_id == "TCGA-COAD", ]$primary_site
```

```{r}
COAD_query <- GDCquery(project = "TCGA-COAD", 
                       data.category = "Transcriptome Profiling", 
                       access = "open", 
                       data.type = "Gene Expression Quantification", 
                       workflow.type = "STAR - Counts")
COAD_query %>% getResults()
saveRDS(COAD_query, 
        "../../../data/zhuyi/dermatomyositis/TCGA-COAD-query.rds")
```

```{r}
GDCdownload(query = COAD_query, 
            directory = "../../../data/zhuyi/dermatomyositis/TCGA-COAD")
```

```{r}
library(SummarizedExperiment)

tables <- GDCprepare(query = COAD_query, 
                     directory = "../../../data/zhuyi/dermatomyositis/TCGA-COAD/")
tables %>% assays
saveRDS(tables, "../../../data/zhuyi/dermatomyositis/TCGA_COAD.rds")
TCGA_COAD <- readRDS("../../../data/zhuyi/dermatomyositis/TCGA_COAD.rds")
```

```{r}
library(EnsDb.Hsapiens.v86)
library(stringr)

sample_info <- TCGA_COAD %>% colData %>% as.data.frame()
sample_info$tissue_type %>% table
mtx <- assay(TCGA_COAD, "fpkm_uq_unstrand") %>% t %>% as.data.frame
mtx %>% dim
mtx <- mtx %>% tibble::rownames_to_column("sample") 
ids <- setNames(sample_info$tissue_type, sample_info$barcode)
mtx$group <- ids[mtx$sample]
mtx <- mtx %>% dplyr::relocate(group) %>% tibble::column_to_rownames("sample")
mtx[1:10, 1:10]
EnsDb.Hsapiens.v86 %>% columns()
colnames(mtx)[-1] <- mapIds(EnsDb.Hsapiens.v86, keys = str_replace(colnames(mtx)[-1], "\\..+$", ""), keytype = "GENEID", column = "SYMBOL")
```

```{r}
for(gene in genes){
    res_roc <- roc(mtx[, 'group', drop = TRUE] ~ mtx[, gene, drop = TRUE])
    
    pdf(paste("../../../data/zhuyi/dermatomyositis/res/04_diagnostic efficacy/", "ROC_TCGA_varfication_", gene, ".pdf", sep = ""))
    
     plot(res_roc, 
          print.auc = TRUE, 
          legacy.axes = TRUE, 
          print.thres = TRUE, 
          col = "red", 
          print.thres.pch = 19, 
          print.thres.cex = 2, 
          grid = TRUE, 
          main = paste(gene))
    
    dev.off()
}
```

# CRC subgroup analysis
```{r}
library(ConsensusClusterPlus)
library(magrittr)
library(Biobase)
library(scater)
library(bluster)

es_CRC <- readRDS("../../../data/zhuyi/dermatomyositis/CRC_es.rds")
mtx <- es_CRC[es_CRC$group == "CRC"] %>% exprs()
mads <- apply(mtx, 1, mad)
ids <- mads %>% sort(decreasing = T) %>% head(10000) %>% names
ids %>% str
mtx <- mtx[ids, ]
mtx %>% dim
mtx <- sweep(mtx, 1, apply(mtx, 1, median), FUN = "-")

res <- ConsensusClusterPlus(d = mtx,
                            maxK = 10, 
                            reps = 10, 
                            pItem = 0.8, 
                            seed = 101, 
                            plot = "pdf", 
                            clusterAlg = "pam", 
                            distance = "euclidean", 
                            title = "consensus_plot", 
                            writeTable = F)

pdata <- es_CRC[, es_CRC$group == "CRC"] %>% pData %>% as.data.frame()
pdata$group <- as.character(pdata$group)
pdata$group %>% table

set.seed(104)
umap <- calculateUMAP(x = mtx, transposed = F, pca = 50, ntop = 2000) %>% as.data.frame()
clusters <- clusterRows(x = umap, BLUSPARAM = NNGraphParam(k = 20)) 
clusters %>% table(useNA = "ifany")
umap$group <- clusters

umap$group <- sapply(umap$group, function(x){
    switch(as.character(x),
           '9' = "Group1",
           '1' = "Group2",
           '3' = "Group3",
           '2' = "Group4",
           '4' = "Group4",
           '5' = "Group4",
           '6' = "Group4",
           '7' = "Group4",
           '8' = "Group4")
})

umap %>% 
    ggplot(aes(UMAP1, UMAP2)) +
    geom_point(aes(color = group)) +
    # geom_text(aes(label = group)) +
    scale_color_discrete(name = "groups") +
    guides(color = guide_legend(override.aes = list(size = 4))) +
    theme_classic()

ggsave("../../../data/zhuyi/dermatomyositis/res/05_CRC_subgroup_analysis/CRC_subgroups.tiff", width = 9)
```

```{r}
df <- data.frame(group = res[[4]]$consensusClass, 
                 row.names = names(res[[4]]$consensusClass))
df$group <- paste("Group", df$group, sep = "")
con_mtx <- res[[4]]$consensusMatrix
rownames(con_mtx) <- res[[4]]$consensusClass %>% names
colnames(con_mtx) <- res[[4]]$consensusClass %>% names
colors <- RColorBrewer::brewer.pal(n = 4, name = "Set1")

pdf("../../../data/zhuyi/dermatomyositis/res/05_CRC_subgroup_analysis/consensus_matrix.pdf", width = 9)
pheatmap::pheatmap(con_mtx, 
                   show_rownames = F, 
                   show_colnames = F, 
                   annotation_col = df, 
                   annotation_colors = list(group = c("Group1" = colors[1], "Group2" = colors[2], "Group3" = colors[3], "Group4" = colors[4])), 
                   main = "consensus matrix k = 4", 
                   color = viridis::viridis(255, option = "D"))
dev.off()
```

```{r}
ids <- setNames(umap$group, rownames(umap))
sample_info <- pData(es_CRC) %>% as.data.frame()
sample_info$subgroup <- ids[sample_info$geo_accession]

sample_info$`tnm.stage:ch1` %>% table
sample_info <- sample_info %>% dplyr::select(`tnm.stage:ch1`, subgroup, `tnm.t:ch1`)
sample_info <- sample_info %>% dplyr::filter(!is.na(`tnm.stage:ch1`), `tnm.stage:ch1` %in% c(1, 2, 3, 4))

pdf("../../../data/zhuyi/dermatomyositis/res/05_CRC_subgroup_analysis/stage.pdf", width = 9)
table(sample_info$subgroup, sample_info$`tnm.stage:ch1`) %>% 
    prop.table(margin = 1) %>% magrittr::set_colnames(value = paste("Stage", 1:4)) %>% 
    pheatmap::pheatmap(cluster_cols = F, color = viridis::viridis(20), angle_col = 0)
dev.off()
```

# immune profile



