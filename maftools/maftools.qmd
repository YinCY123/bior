---
title: "maftools"
author: "YinCY"
format: html
---

```{r}
#| message: false
#| warning: false
# BiocManager::install("maftools")

library(maftools)
library(magrittr)
```

# Introdution
With advances in Cancer Genomics, Mutation Annotation Format (MAF) is being widely accepted and used to store somatic variants detected. The Cancer Genome Atlas Project has sequenced over 30 different cancers with sample size of each cancer type being over 200. Resulting data consisting of somatic variants are stored in the form of Mutation Annotation Format. This package attempts to summarize, analyze, annotate and visualize MAF files in an efficient manner from either TCGA sources or any in-house studies as long as the data is in MAF format.

# Genrating MAF files
- For VCF files or simple tubular files, eas option is to use vcf2maf utility which annotate VCFs, prioritize transcripts, and generate an MAF. Recent updates to gatk has enabled funcotator to generate MAF files. 

- If you're using ANNOVAR for variant annotations, maftools has a handy function `annovaToMaf` for converting tabular `annovar` outputs to MAF.

# MAF field requirements
MAF files contain many fields rangeing from chromosome names to cosmic annotations. However most of the analysis in maftools uses following fields.

- Mandatory fields: `Hogo_Symbol`, `Chromosome`, `Start_Position`, `End_Position`, `Reference_Allele`, `Tumor_Seq_Allele2`, `Variant_Classification`, `Variant_Type and Tumor_Sample_Barcode`.

- Recommended optional fields: non MAF specific fields containing VAF (Variant Allele Frequency) and amino acid change information.

# Overview of the package
![](figures/maftools_01.png)

# Reading and summarizing maf files
## Required input files
- an MAF-file can be gz compressed.
- an optional but recommanded clinical data associated with each sample/Tumor_Sample_Barcode in MAF.
- an optional copy number data if available. Can be GISTIC output or a custom table containing sample names, gene names and copy-number status (`Amp` or `Del`).

## Reading MAF files
`read.maf` function read MAF files, summarize it in various ways and stores it as an MAF object. Even though MAF file is alone enough, it is recommended to provide annotations associated with samples in MAF. One can also integrate copy number data if available.

Note that by default, Variants with High/Moderate consequences are considered as non-synonymous. You change this behavior with the argument `vc_nonSyn` in `read.maf`.

```{r}
#| message: false
#| warning: false

library(magrittr)
library(maftools)
```

```{r}
laml.maf <- system.file("extdata", "tcga_laml.maf.gz", package = "maftools")
laml.clin <- system.file("extdata", "tcga_laml_annot.tsv", package = "maftools")
laml <- read.maf(maf = laml.maf, 
                 clinicalData = laml.clin)

laml
```

## MAF object
Summarized MAF file is stored as an MAF object. MAF object contains main maf file, summarized data and any associated sample annotations.

There are accessor methods to access the useful slots from MAF object.

```{r}
laml
```

```{r}
# show sample summary
getSampleSummary(laml)
```

```{r}
# shows gene summary
getGeneSummary(laml)
```

```{r}
# shows clinical data associated with samples
getClinicalData(laml)
```

```{r}
# Shows all fields MAF
getFields(laml)
```

```{r}
# write maf summary to an output file with basename laml
write.mafSummary(maf = laml, basename = "laml")
```

# Visaulization
## Plotting MAF summary
We can use `plotmafSummary()` to plot the summary of the maf file, which displays number of variants in each sample as a stacked barplot and variant types as a boxplot summarized by Variant_Classification.

```{r}
plotmafSummary(maf = laml, 
               rmOutlier = TRUE, 
               addStat = "median", 
               dashboard = TRUE, 
               titvRaw = FALSE)
```

```{r}
# ?mafbarplot
mafbarplot(maf = laml, 
           n = 20, 
           fontSize = 1, 
           includeCN = T, 
           legendfontSize = 0.8, 
           borderCol = "grey", 
           showPct = TRUE)
```

## Drawing oncoplos
Better representation of maf file can be shown as oncoplots, also known as waterfall plots.

```{r}
oncoplot(maf = laml, 
         top = 10)
```

NOTE: Variants annotated as Multi_Hit are those genes which are mutated more than once in the same sample.

## Transition and Transversions
`titv` function classifies SNPs into `Transitions and TRansversions` and returns a list of summarized tables in various ways. Summarized data can also be visualized as a boxplot showing overall distribution of six different conversions and as a stacked barplot showing fraction of conversions in each sample.

```{r}
laml.titv <- titv(maf = laml, plot = F, useSyn = TRUE)
plotTiTv(laml.titv)
```

































