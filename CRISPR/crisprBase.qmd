---
title: "Base functions and classes for CRISPR gRNA design"
author: "YinCY"
format: html
---

# Overiew
The `crisprBase` package is a core package of the *crisprVerse ecosystem* that provides S4 classes for representing CRISPR nucleases and base editors. It also provides arithmetic functions to extract genomic ranges to help with the design and manipulation of CRISPR guide-RNAs (gRNAs). The classes and functions are designed to work with a broad spectrum of nucleases and applications, including PAM-free CRISPR nucleases, RNA-targeting nucleases, and the more general class of restriction enzymes. It also includes functionalities for CRISPR nickases.


# Nuclease class
The `Nuclease` class is designed to store minimal information about the recognition sites of general nucleases, such as restriction enzymes. The `Nuclease` class has 5 fields: `nucleaseName`, `targetType`, `metadata`, `motifs` and `weights`. The `nucleaseName` field is a string specifying a name for the nuclease. The `targetType` specifies if the nuclease targets “DNA” (deoxyribonucleases) or “RNA” (ribonucleases). The `metadata` field is a list of arbitrary length to store additional information about the nuclease.

The `motifs` field is a character vector that specify one of several DNA sequence motifs that are recognized by the nuclease for cleavage (always in the 5’ to 3’ direction). The optional `weights` field is a numeric vector specifying relative cleavage probabilities corresponding to the motifs specified by `motifs`. Note that we use DNA to represent motifs irrespectively of the target type for simplicity.

We use the Rebase convention to represent motif sequences (Roberts et al. 2010). For enzymes that cleave within the recognition site, we add the symbol `^` within the recognition sequence to specify the cleavage site, always in the 5’ to 3’ direction. For enzymes that cleave away from the recognition site, we specify the distance of the cleavage site using a `(x/y)` notation where `x` represents the number of nucleotides away from the recognition sequence on the original strand, and `y` represents the number of nucleotides away from the recognition sequence on the reverse strand.

## Examples
The EcoRI enzyme recognizes the palindromic motif `GAATTC`, and cuts after the first nucleotide, which is specified using the `^` below.

```{r}
#| message: false
#| warning: false

library(crisprBase)
library(magrittr)

EcoRI <- Nuclease(nucleaseName = "EcoRI", 
                  targetType = "DNA", 
                  motifs = c("G^AATTC"), 
                  metadata = list(description = "EcoRI restriction enzyme"))
EcoRI
```

The HgaI enzyme recognizes the motif GACGC, and cleaves DNA at 5 nucleotides downstream of the recognition sequence on the original strand, and at 10 nucleotides downstream of the recognition sequence on the reverse strand:

```{r}
HgaI <- Nuclease(nucleaseName = "HgaI", 
                 targetType = "DNA", 
                 motifs = c("GACGA(5/10)"), 
                 metadata = list(description = "HgaI restriction enzyme"))
HgaI
```


Note that any nucleotide letter that is part of the extended IUPAC nucleic acid can be used to represent recognition motifs. For instance, we use `Y` and `R` (pyrimidine and purine, respectively) to specify the possible recognition sequences for PfaAI

```{r}
PfaAI <- Nuclease(nucleaseName = "PfaAI", 
                  targetType = "DNA", 
                  motifs = c("G^GYRCC"), 
                  metadata = list(description = "PfaAI restriction enzyme"))
PfaAI
```


## Accessor functions
The accessor function `motifs` retrieve the motif sequences.

```{r}
PfaAI %>% motifs()
```


To expand the motif sequence into all combinations of valid sequences with only A/C/T/G nucleotides, users can use `expand=TRUE`.

```{r}
PfaAI %>% motifs(expand = TRUE)
```

# CrisprNuclease class




















