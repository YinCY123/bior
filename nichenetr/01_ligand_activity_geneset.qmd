---
title: "01 ligand activity geneset"
author: "yincy"
format: html
editor: visual
---

# NicheNet's ligand activity analysis on a gene set of interest: predict active ligands and their target genes

In this vignette, you can learn how to perform a basic NicheNet analysis. A NicheNet analysis can help you to generate hypotheses about an intercellular communication process of interest for which you have bulk or single-cell gene expression data. Specifically, NicheNet can predict 1) which ligands from one cell population ("sender/niche") are most likely to affect target gene expression in an interacting cell population ("receiver/target") and 2) which specific target genes are affected by which of these predicted ligands.

Because NichNet studies how ligands affect gene expression in neighboring cells, you need to have data about this effect in gene expression you want to study. So, you need to have a clear set of genes that are putatively affected by ligands from one of more interacting cells.

The pipline of a basic NichNet analysis consist mainly of the following steps:

-   define a 'sender/niche' cell population and a 'receiver/target' cell population present in your expression data and determine which genes are expressed in both populations.

-   define a gene set of interest: these are the genes in the 'reciver/target' cell population that are potentially affected by ligands expressed by interacting cells (e.g. genes differentially expressed upon cell-cell interaction).

-   define a set of potential ligands: these are ligands that are expressed by the 'sender/niche' cell population and bind a receptor expressed by the 'reciver/target' population.

-   Perform Nichnet ligand activity analysis: rank the potential ligands based on the presence of their target genes in the gene set of interest (compared to the background set of genes).

-   infer top-predicted target genes of ligands that are top-ranked in the ligand activity analysis.

This vignette guides you in detail through all these steps. As example expression data of interacting cells, we will use data from Puram et al. to explore intercellular communication in the tumor microenvironment in head and neck squamous cell carcinoma (HNSCC) (See Puram et al. 2017). More specifically, we will look at which ligands expressed by cancer-associated fibroblasts (CAFs) can induce a specific gene program in neighboring malignant cells. This program, a partial epithelial-mesenschymal transition (p-EMT) program, could be linked to metastasis by Puram et al.

## load required packages, NichNet's ligand-target prior model and processed expression data of interacting cells

```{r}
library(nichenetr)
library(tidyverse)
```

ligand-target model: This model denotes the prior potential that a particular ligand might regulate the expression of a specific target gene.

```{r}
lr_network <- readRDS("../../data/nichenet/human/lr_network_human_21122021.rds")
ligand_target_matrix <- readRDS("../../data/nichenet/human/ligand_target_matrix_nsga2r_final.rds")
lr_network <- lr_network %>% distinct(from, to)

hnscc_expression <- readRDS("../../data/nichenet/human/hnscc_expression.rds")
expression <- hnscc_expression$expression
sample_info <- hnscc_expression$sample_info
```

Because the NichNet 2.0 networks are the most recent version of the offical gene symbols, we will make sure that the genes symbols used in the expression data are also update.

```{r}
expression[1:10, 1:10]
colnames(expression) <- convert_alias_to_symbols(colnames(expression), "human", verbose = F)
```

## define expressed genes in sender and reciver cell populations

Our research question is to prioize which ligands expressed by CAFs can induce p-EMT in neighboring malignant cells. Therefore, CAFs are the sender cells in this example and malignant cells are receiver cells. This is an example of paracine signaling. Note that autocrine signaling can be considered if sender and receiver cell type are the same.

Now, we will determine which genes are expressed in the sender cells (CAFs) and receiver cell (maliganant cells) from high quanlity primary tumors. Therefore, we will not consider cells from tumor samples of less quality or from lymph node metastases.

To determine expressed genes in this case study, we use the definition used by Puram et al. (the authors of this dataset), which is Ea, the aggregate expression of each gene i across the k cells, calculated as Ea(i) = log2(average(TPM(i)1...k)+1), should be \>= 4. We recommend users to define expressed genes in the same way that they consider to be most appropriate for the dataset. For single cell data generated by the 10x platform in our lab, we don't use the definition used here, but we consider genes to be expressed in a cell type when they have non-zero values in at least 10% of the cells fro that cell type.

```{r}
tumors_remove <- c("HN10","HN","HN12", "HN13", "HN24", "HN7", "HN8","HN23")

CAF_ids = sample_info %>% filter(`Lymph node` == 0 & !(tumor %in% tumors_remove) & `non-cancer cell type` == "CAF") %>% pull(cell)
malignant_ids = sample_info %>% filter(`Lymph node` == 0 & !(tumor %in% tumors_remove) & `classified  as cancer cell` == 1) %>% pull(cell)

expressed_genes_sender = expression[CAF_ids,] %>% apply(2,function(x){10*(2**x - 1)}) %>% apply(2,function(x){log2(mean(x) + 1)}) %>% .[. >= 4] %>% names()
expressed_genes_receiver = expression[malignant_ids,] %>% apply(2,function(x){10*(2**x - 1)}) %>% apply(2,function(x){log2(mean(x) + 1)}) %>% .[. >= 4] %>% names()

expressed_genes_sender %>% str
expressed_genes_receiver %>% str
```

## define the gene set of interest and a background of genes

As gene set of interest, we consider the genes of which the expression is possibly affected due to communication with other cells. The definition of this gene set depends on your research questn and is a crucial step in the use of NichNet.

Because we here want to investigate how CAFs regulate the expression of p-EMT genes in malignant cells, we will use the p-EMT gene set defined by Puram et al. as gene set of interest and use all genes expression in malignant cells as background of genes.

```{r}
geneset_oi <- read.table("../../data/nichenet/human/pemt_signature.txt", 
                         sep = "\t", 
                         header = F, 
                         col.names = "gene") %>% 
  pull(gene) %>% unique

background_expressed_genes <- expressed_genes_receiver %>% .[. %in% rownames(ligand_target_matrix)]
background_expressed_genes %>% str
```

## define a set of potential ligands

As potentially active ligands, we will use ligands that are 1)expressed by CAFs and 2) bind a putative receptor expressed by malignant cells. Putative ligand-receptor links were gathered from NichNet's ligand-receptor data sources.

```{r}
ligands <- lr_network %>% pull(from) %>% unique
expressed_ligands <- intersect(ligands, expressed_genes_sender)

receptors <- lr_network %>% pull(to) %>% unique
expressed_receptors <- intersect(receptors, expressed_genes_receiver)


lr_network_expressed <- lr_network %>% 
  filter(from %in% expressed_ligands & to %in% expressed_receptors)

lr_network_expressed
```

This ligand-receptor network contains the expressed ligand-receptor interactions. As potentially active ligands for the NichNet analysis, we will consider the ligands from this network.

```{r}
potential_ligands <- lr_network_expressed %>% pull(from) %>% unique
potential_ligands %>% str
```

## Perform NichNet's ligand activity analysis on the gene set of interest

Now perform the ligand activity analysis: in this analysis, we will calculate ligand activity of each ligand, or in other words, we will assess how well each CAF-ligand can predict the p-EMT gee set compared background of expressed genes (predict whether a gene belongs to the p-EMP program or not).

```{r}
ligand_activities <- predict_ligand_activities(geneset = geneset_oi, 
                                               background_expressed_genes = background_expressed_genes, 
                                               ligand_target_matrix = ligand_target_matrix, 
                                               potential_ligands = potential_ligands)
```

Now, we want to rank the ligands based on their ligand activity. In our validation study, we showed that the area under the precision-recall (AURP) between a ligands target predictions and the observed transpritional response was the most informative measure to define ligand activity (this was the Peaeson correlation for V1). Therefore, we will rank the ligands based on their AUPR. This allows us to prioritize p-EMT-regulating ligands.

```{r}
ligand_activities %>% arrange(-aupr_corrected)

best_upstream_ligands <- ligand_activities %>% 
  top_n(30, aupr_corrected) %>% 
  arrange(-aupr_corrected) %>% 
  pull(test_ligand)

best_upstream_ligands %>% str
```

We see here that the performance metrics indicate that the 30 top-ranked ligands can predict the p-EMT genes reasonably, this implies that ranking of the ligands might be accurate as shown in our study. However, it is possible that for some gene sets, the target gene prediction performance of the top-ranked ligands would not be much better than random prediction. In that case, prioritization of ligands will be less trustworthy.

Additional note: we looked at the top 30 ligands here and will continue the analysis by inferring p-EMT target genes of these 30 ligands. However, the choice of looking only at the 30 top-ranked ligands for further biological interpretation is based on biological intuition and is quite arbitrary. Therefore, users can decide to continue the analysis with a different number of ligands. We recommend to check the selected cutoff by looking at the distribution of the ligand activity values. Here, we show the ligand activity histogram (the score for the 30th ligand is indicated via the dashed line).

```{r}
ggplot(ligand_activities, aes(x = aupr_corrected)) +
  geom_histogram(color = "black", fill = "darkorange") +
  geom_vline(aes(xintercept = min(ligand_activities %>% top_n(30, aupr_corrected) %>% pull(aupr_corrected))), color = "red", linetype = 2, size = 1) +
  labs(x = "ligand activity (PCC", y = "# ligands")
```

## Infer target genes of top-ranked ligands

Now we will show how you can look at the regulatory potential scores between ligands and target genes of interest. In this case, we will look at links between top-ranked p-EMT regulating ligands and p-EMT genes. In the ligand-target heatmaps, we show here regulatory potential scores for interactions between the 20 top-ranked ligands and following target genes: genes that belong to the gene set of interest and to the 250 most strongly predicted targets of at least one of the 20 top-ranked ligands (the top 250 targets according to the general prior model, so not the top 250 targets for this dataset). Consequently, genes of your gene set that are not a top target gene of one of the prioritized ligands, will not be shown on the heatmap.

```{r}
active_ligand_target_links_df <- best_upstream_ligands %>% 
  lapply(get_weighted_ligand_target_links, 
         geneset = geneset_oi, 
         ligand_target_matrix = ligand_target_matrix, 
         n = 250) %>% 
  dplyr::bind_rows()

active_ligand_target_links_df
```

## inferring signal pathway between ligands to targets

To determine signaling paths between a ligand and target of interest, we look at which transcription factors are best regulating the target genes and are most closely downstream of the ligand (based on the weights of the edges in the integrated ligand-signaling and gene regulatory networks). Then, the shortest paths between these transcription factors and the ligand of interests are determined and genes forming part in this path are considered as important signaling mediators. Finally, we look in our collected data source networks for all interactions between the ligand, signaling mediators, transcription factors and target genes. This allows to both prioritize signaling mediators and check which of all collected data sources support the ligand-target predictions of interest.

For this analysis, you need to define: - One or more ligands of interest.\
- one or more target genes o finterest.

In this vignette, we will demonstrate how to infer signaling paths between a CAF-ligand (CAF = cancer-associated fibroblast) of interest and some of its top-predicted p-EMT target genes.

First, we will load the necessary packages and networks to infer signaling paths between ligand and target genes of interest.

```{r}
weighted_networks <- readRDS("../../data/nichenet/human/weighted_networks_nsga2r_final.rds")
ligand_tf_matrix <- readRDS("../../data/nichenet/human/ligand_tf_matrix_nsga2r_final.rds")

lr_network <- readRDS("../../data/nichenet/human/lr_network_human_21122021.rds")
sig_network <- readRDS("../../data/nichenet/human/signaling_network_human_21122021.rds")
gr_network <- readRDS("../../data/nichenet/human/gr_network_human_21122021.rds")
```

As example, we will infer signaling pathways between the CAF-ligand TGFB3 and its top-predicted p-EMT target genes TGFB1, LAMC2 and TNC.

```{r}
ligands_all <- "TGFB3"
targets_all <- c("TGFB1", "LAMC2", "TNC")

active_signaling_network <- get_ligand_signaling_path(ligand_tf_matrix = ligand_tf_matrix, 
                                                      ligands_all = ligands_all, 
                                                      targets_all = targets_all, 
                                                      weighted_networks = weighted_networks)
```

data source support this pathways

```{r}
data_source_network <- infer_supporting_datasources(signaling_graph_list = active_signaling_network, 
                                                    lr_network = lr_network, 
                                                    sig_network = sig_network, 
                                                    gr_network = gr_network)

data_source_network
```
