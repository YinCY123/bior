---
title: "nasa"
author: "YinCY"
format: html
editor: source
---

```{r}
#| message: false
#| warning: false

library(fs)
library(R.utils)
library(magrittr)
library(DropletUtils)
library(scater)
library(scran)
library(bluster)
library(EnsDb.Mmusculus.v79)
library(batchelor)
library(SingleCellExperiment)
library(magrittr)
library(scDblFinder)
```

```{r}
files <- dir_ls("/home/yincy/git/data/parttime/nasa/data/", type = "file")
for(file in files){unzip(zipfile = file, exdir = "/home/yincy/git/data/parttime/nasa/data/")}
```

```{r}
samples <- dir_ls("/home/yincy/git/data/parttime/nasa/", type = "directory", recurse = TRUE)
samples <- grep("filtered$", samples, value = TRUE)
samples %>% str

sample_names <- strsplit(samples, "/") %>% sapply("[[", 9)
```

```{r}
sces <- read10xCounts(samples = samples, 
                      sample.names = sample_names, 
                      col.names = TRUE, 
                      type = "sparse", 
                      BPPARAM = BiocParallel::MulticoreParam(workers = 10))
sces %>% rowData()
sces %>% colData()
rowData(sces)$chr <- mapIds(x = EnsDb.Mmusculus.v79, 
                            keys = rownames(rowData(sces)), 
                            keytype = "GENEID", 
                            column = "SEQNAME")
rowData(sces)
sces$Sample %>% table
```

```{r}
# cell qc
is_mito <- rowData(sces)$chr == "MT"
is_mito <- ifelse(is.na(is_mito), FALSE, is_mito)
is_mito %>% table
stats <- perCellQCMetrics(x = sces, 
                          subsets = list(mito = is_mito), 
                          BPPARAM = BiocParallel::MulticoreParam(10))

qc_sum <- isOutlier(stats$sum, type = "both", log = TRUE, batch = sces$Sample)
qc_sum %>% table

qc_detected <- isOutlier(stats$detected, type = "both", log = TRUE, batch = sces$Sample)
qc_detected %>% table

qc_mito <- isOutlier(stats$subsets_mito_percent, type = "higher", log = TRUE, batch = sces$Sample)
qc_mito %>% table

qc <- qc_sum | qc_detected | qc_mito
qc %>% table

sces <- sces[, !qc]
```

```{r}
# gene qc
stats <- perFeatureQCMetrics(sces)
stats
qc <- stats$detected > 0
qc %>% table
sces <- sces[qc, ]
sces
saveRDS(sces, "/home/yincy/git/data/parttime/nasa/nasa.rds")
```

```{r}
set.seed(101)
sces <- readRDS("/home/yincy/git/data/parttime/nasa/nasa.rds")
qclusters <- quickCluster(sces, 
                          method = "igraph", 
                          use.rank = TRUE, 
                          d = 100, 
                          block = sces$Sample, 
                          BPPARAM = BiocParallel::MulticoreParam(10))
qclusters %>% table

sces <- computePooledFactors(x = sces, 
                             clusters = qclusters, 
                             BPPARAM = BiocParallel::MulticoreParam(10))
sces <- multiBatchNorm(sces, batch = sces$Sample)

stats <- modelGeneVar(x = sces, block = sces$Sample)
stats[order(stats$bio, decreasing = T), ]
hvgs <- getTopHVGs(stats, var.threshold = 0)
hvgs %>% str
```

```{r}
set.seed(101)
cur <- sces
cur <- batchCorrect(cur, 
                    batch = cur$Sample,
                    subset.row = hvgs, 
                    correct.all = TRUE, 
                    PARAM = FastMnnParam(k = 10, d = 100, auto.merge = TRUE, 
                                         BPPARAM = BiocParallel::MulticoreParam(10)))
assay(sces, "reconstructed") <- assay(cur, "reconstructed")
reducedDim(sces, "corrected") <- reducedDim(cur, "corrected")
rm(cur);gc()
```

```{r}
set.seed(101)
sces <- runTSNE(x = sces, 
                dimred = "corrected", 
                assay.type = "reconstructed", 
                perplexity = 50, 
                num_threads = 10, 
                BPPARAM = BiocParallel::MulticoreParam(10))
```

```{r}
set.seed(101)
clusters <- clusterRows(x = reducedDim(sces, "corrected"), 
                        BLUSPARAM = NNGraphParam(BPPARAM = BiocParallel::MulticoreParam(10), k = 10))
clusters %>% table
colData(sces)$clusters <- factor(clusters)

# doublet detection
dbs <- findDoubletClusters(x = nasa, 
                           clusters = nasa$clusters, 
                           assay.type = "logcounts")
dbs

saveRDS(sces, "/home/yincy/git/data/parttime/nasa/preprocessed_nasa.rds")
```

```{r}
sces <- readRDS("/home/yincy/git/data/parttime/nasa/preprocessed_nasa.rds")
sces %>% colData

plotReducedDim(sces, 
               dimred = "TSNE", 
               colour_by = "clusters",
               point_size = 0.5) +
  theme(legend.position = "none")
```

# reference
```{r}
#| message: false
#| warning: false

library(data.table)
library(magrittr)
library(stringr)
library(stringr.plus)
library(EnsDb.Mmusculus.v79)
library(SingleCellExperiment)
library(scran)
library(scater)
library(bluster)
library(batchelor)
library(patchwork)

GSE122465 <- fread("/home/yincy/git/data/parttime/nasa/reference/GSE122465/GSE122465_FilteredCounts10x.csv", 
                   sep = ",", 
                   header = TRUE) %>% as.data.frame()
GSE122465 %>% dim

gene_info <- data.frame(symbol = GSE122465$V1, 
                        ensembl = mapIds(EnsDb.Mmusculus.v79, keys = GSE122465$V1, keytype = "SYMBOL", column = "GENEID"))
gene_info$ensembl %>% is.na() %>% table
gene_info <- gene_info %>% dplyr::filter(!is.na(ensembl)) %>% tibble::remove_rownames() %>% magrittr::set_rownames(value = .$ensembl)
gene_info %>% head

GSE122465 <- GSE122465 %>% dplyr::filter(V1 %in% gene_info$symbol)
```

```{r}
cell_info <- data.frame(barcodes = GSE122465 %>% colnames() %>% .[-1], 
                        row.names = GSE122465 %>% colnames() %>% .[-1])

cell_info %>% dim
cell_info %>% tail
batch <- str_extract_between(cell_info$barcodes, 
                             pattern1 = "_", 
                             pattern2 = "_", 
                             which_pattern1 = "first", 
                             which_pattern2 = "last") %>% 
  str_extract_after(pattern = "_")
batch %>% table

cell_info$batch <- batch
cell_info
```

```{r}
mtx <- dplyr::inner_join(GSE122465, gene_info, by = c("V1" = "symbol")) %>% 
  dplyr::relocate(ensembl, .before = V1)
mtx <- mtx %>% tibble::column_to_rownames("ensembl") %>% dplyr::select(-V1) %>% as.matrix()
mtx[1:10, 1:10]
```

```{r}
GSE122465 <- SingleCellExperiment(assays = list(counts = as(mtx, "CsparseMatrix")), 
                                  rowData = gene_info, 
                                  colData = cell_info)
GSE122465
GSE122465 %>% colData
GSE122465 %>% rowData
saveRDS(GSE122465, "/home/yincy/git/data/parttime/nasa/reference/GSE122465.rds")
```

```{r}
library(Seurat)
library(magrittr)
load("/home/yincy/git/data/nasa/ref/NicheMetaDataLCM.rda")

NicheMetaDataLCM
NicheDataLCM 
NicheMarkers10x


NicheData10x <- UpdateSeuratObject(NicheData10x)
NicheData10x[[]]
```

```{r}
unzip("/home/yincy/git/data/parttime/nasa/reference/RNAMagnetDataBundle.zip", 
      exdir = "/home/yincy/git/data/parttime/nasa/reference/")
load("/home/yincy/git/data/parttime/nasa/reference/NicheMarkers10x.rda")
load("/home/yincy/git/data/parttime/nasa/reference/NicheData10x.rda")
NicheData10x <- Seurat::UpdateSeuratObject(NicheData10x)
seurat_clusters <- NicheData10x %>% Idents()
NicheData10x[[]]$cell_type <- Idents(NicheData10x)
NicheData10x[[]]
cell_type_df <- NicheData10x[[]]
cell_types <- setNames(cell_type_df$cell_type, rownames(cell_type_df))

GSE122465 <- readRDS("/home/yincy/git/data/parttime/nasa/reference/GSE122465.rds")
colData(GSE122465)$cell_types <- cell_types[GSE122465$barcodes]
colData(GSE122465)
```

```{r}
qclusters <- quickCluster(x = GSE122465, 
                          min.size = 50,
                          d = 50, 
                          method = "igraph", 
                          use.rank = TRUE, 
                          BPPARAM = BiocParallel::MulticoreParam(10), 
                          block = GSE122465$batch)
qclusters %>% table
GSE122465$qclusters <- factor(qclusters)

GSE122465 <- computePooledFactors(x = GSE122465, clusters = GSE122465$qclusters)
GSE122465 <- logNormCounts(x = GSE122465, size.factors = GSE122465$sizeFactor)
dec <- modelGeneVar(GSE122465, block = GSE122465$batch)
dec[order(dec$bio, decreasing = T), ]
hvgs <- getTopHVGs(dec, var.threshold = 0)
hvgs %>% str
```

```{r}
cur <- GSE122465
cur <- fastMNN(cur, 
               batch = cur$batch, 
               auto.merge = TRUE, 
               subset.row = hvgs, 
               correct.all = TRUE, 
               d = 100, 
               k = 10, 
               BPPARAM = BiocParallel::MulticoreParam(10))
cur
reducedDim(GSE122465, "corrected") <- reducedDim(cur, "corrected")
assay(GSE122465, "reconstructed") <- assay(cur, "reconstructed")
rm(cur);gc()
GSE122465
```

```{r}
GSE122465 <- runTSNE(GSE122465, 
                     dimred = "corrected", 
                     perplexity = 30, 
                     num_threads = 10)
GSE122465
saveRDS(GSE122465, "/home/yincy/git/data/parttime/nasa/reference/processed_GSE122465.rds")
```

```{r}
source("/home/yincy/git/mouse-kidney/functions/idconv.R")
plotReducedDim(GSE122465, 
               dimred = "TSNE", 
               color_by = "cell_types", 
               text_by = "cell_types",
               point_size = 0.5, 
               text_size = 2) +
  theme_classic() +
  theme(legend.position = "none")

plotReducedDim(GSE122465, 
               dimred = "TSNE", 
               color_by = "clusters", 
               text_by = "clusters", 
               point_size = 0.5) +
  theme_classic() +
  theme(legend.position = "none")
ggsave("/home/yincy/git/data/parttime/nasa/reference/cell_types.tiff")
```

```{r}
cell_types <- c(
  "1" = "Dendritic cells", "2" = "Monocytes", "3" = "Dendritic cells", "4" = "Monocytes", "5" = "small pre-B.", 
  "6" = "Erythroblasts", "7" = "small pre-B.", "8" = "Mk prog.", "9" = "Erythroblasts", "10" = "Dendritic cells", 
  "11" = "Mk prog.", "12" = "Eo/Baso prog.", "13" = "Monocytes", "14" = "NK cells", "15" = "large pre-B.", 
  "16" = "Monocytes", "17" = "Mono prog.", "18" = "Monocytes", "19" = "Monocytes", "20" = "LMPPs", 
  "21" = "NK cells",  "22" = "pro-B", "23" = "T cells", "24" = "Dendritic cells", "25" = "B cell", 
  "26" = "Gran/Mono prog.", "27" = "Ery/Mk prog.", "28" = "B cell", "29" = "Monocytes", "30" = "Monocytes", 
  "31" = "NK cells", "32" = "Adipo-CAR", "33" = "Monocytes", "34" = "Monocytes", "35" = "Dendritic cells", 
  "36" = "pro-B", "37" = "Monocytes", "38" = "Monocytes", "39" = "Dendritic cells", "40" = "large pre-B.", 
  "41" = "Dendritic cells", "42" = "Monocytes", "43" = "Monocytes", "44" = "Monocytes", "45" = "Gran/Mono prog.", 
  "46" = "Erythroblasts", "47" = "B cell", "48" = "Monocytes", "49" = "Erythroblasts", "50" = "Neutro prog.", 
  "51" = "Mono prog.", "52" = "large pre-B.", "53" = "Neutro prog.", "54" = "Arteriolar ECs", "55" = "large pre-B.", 
  "56" = "Dendritic cells", "57" = "Adipo-CAR", "58" = "Mk prog.", "59" = "large pre-B.", "60" = "Monocytes", 
  "61" = "large pre-B.", "62" = "Mono prog.", "63" = "Monocytes", "64" = "LMPPs", "65" = "Monocytes", 
  "66" = "Dendritic cells", "67" = "pre-B.", "68" = "Monocytes", "69" = "B cell", "70" = "B cell", 
  "71" = "Neutro prog.", "72" = "Monocytes", "73" = "Gran/Mono prog.", "74" = "Mk prog.", "75" = "T cells", 
  "76" = "Neutro prog.", "77" = "NK cells", "78" = "B cell", "79" = "Dendritic cells", "80" = "B cell", 
  "81" = "Neutro prog.", "82" = "large pre-B.", "83" = "Dendritic cells", "84" = "Neutro prog.", "85" = "B cell", 
  "86" = "Osteoblasts", "87" = "Dendritic cells", "88" = "Erythroblasts", "89" = "Erythroblasts", "90" = "T cells",
  "91" = "Monocytes", "92" = "Monocytes", "93" = "Ery/Mk prog.", "94" = "large pre-B.", "95" = "Ery prog.", 
  "96" = "Dendritic cells", "97" = "Monocytes", "98" = "Monocytes", "99" = "Neutro prog.", "100" = "T cells", 
  "101" = "large pre-B.", "102" = "Dendritic cells", "103" = "Monocytes", "104" = "Monocytes", "105" = "LMPPs", 
  "106" = "Erythroblasts", "107" = "Dendritic cells", "108" = "Dendritic cells", "109" = "large pre-B.", "110" = "LMPPs", 
  "111" = "Monocytes", "112" = "Gran/Mono prog.", "113" = "Eo/Baso prog.", "114" = "NK cells", "115" = "Osteo-CAR", 
  "116" = "Monocytes", "117" = "Neutro prog.", "118" = "large pre-B.", "119" = "Neutro prog.", "120" = "Monocytes", 
  "121" = "Neutrophils", "122" = "Monocytes", "123" = "Monocytes", "124" = "Dendritic cells", "125" = "Erythroblasts", 
  "126" = "Adipo-CAR", "127" = "Eo/Baso prog.", "128" = "B cell", "129" = "Monocytes", "130" = "Monocytes", 
  "131" = "Dendritic cells", "132" = "Dendritic cells", "133" = "Dendritic cells", "134" = "Mono prog.", "135" = "B cell", 
  "136" = "Monocytes", "137" = "small pre-B.", "138" = "B cell", "139" = "Dendritic cells", "140" = "Eo/Baso prog.", 
  "141" = "LMPPs", "142" = "large pre-B.", "143" = "Erythroblasts", "144" = "B cell", "145" = "Dendritic cells", 
  "146" = "B cell", "147" = "small pre-B.", "148" = "B cell", "149" = "large pre-B.", "150" = "Dendritic cells", 
  "151" = "B cell", "152" = "B cell", "153" = "Monocytes", "154" = "B cell", "155" = "large pre-B.", 
  "156" = "B cell", "157" = "large pre-B.", "158" = "Eo/Baso prog.", "159" = "B cell", "160" = "Monocytes", 
  "161" = "large pre-B.", "162" = "Dendritic cells", "163" = "Mk prog.", "164" = "B cell", "165" = "Erythroblasts", 
  "166" = "B cell", "167" = "LMPPs", "168" = "T cells", "169" = "Monocytes", "170" = "B cell", 
  "171" = "Dendritic cells", "172" = "Monocytes"
)
```


# annotation nasa
```{r}
#| message: false
#| warning: false

library(SingleCellExperiment)
library(SingleR)
library(scran)
library(magrittr)
library(scater)

GSE122465 <- readRDS("/home/yincy/git/data/parttime/nasa/reference/processed_GSE122465.rds")
nasa <- readRDS("/home/yincy/git/data/parttime/nasa/preprocessed_nasa.rds")

pred_label <- SingleR(test = nasa, 
                      ref = GSE122465, 
                      labels = GSE122465$cell_types, 
                      aggr.ref = F, 
                      de.method = "classic",
                      assay.type.test = "logcounts", 
                      assay.type.ref = "logcounts", 
                      BPPARAM = BiocParallel::MulticoreParam(10))
pred_label$pruned.labels %>% table
setdiff(unique(GSE122465$cell_types), unique(pred_label$pruned.labels))

table(nasa$clusters, pred_label$pruned.labels) %>% prop.table(margin = 1) %>% round(digits = 2) %>% .[171:172, ]
pred_label$pruned.labels %>% table(useNA = "ifany")

colData(nasa)$cell_type <- cell_types[nasa$clusters]
colData(nasa)
nasa <- nasa[, !is.na(nasa$cell_type)]

saveRDS(nasa, "/home/yincy/git/data/parttime/nasa/preprocessed_nasa.rds")
```


```{r}
plotReducedDim(nasa, 
               color_by = "clusters", 
               text_by = "clusters", 
               dimred = "TSNE", 
               point_size = 0.5, 
               text_size = 2) +
  theme_classic() +
  theme(legend.position = "none")

ggsave("/home/yincy/git/data/parttime/nasa/nasa_clusters.tiff")
```

# differential expression analysis
```{r}

```







